/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ({

/***/ 4:
/***/ (function(module, exports) {

eval("var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * @fileoverview Displaying Text\n * @author burning <iburning@live.cn>\n * @version 2017.08.28\n */\n\n//Aliases\n// console.log('PIXI', PIXI)\nvar Container = PIXI.Container;\nvar Graphics = PIXI.Graphics;\nvar Loader = PIXI.loader;\nvar Rectangle = PIXI.Rectangle;\nvar Renderer = PIXI.autoDetectRenderer;\nvar Resources = PIXI.loader.resources;\nvar Sprite = PIXI.Sprite;\nvar Text = PIXI.Text;\nvar TextureCache = PIXI.utils.TextureCache;\nvar Texture = PIXI.Texture;\nvar bump = new Bump(PIXI);\n\nvar UNIT = 8;\nvar COLOR_PRIMARY = 0x333333;\nvar COLOR_WHITE = 0xffffff;\nvar LINE_ALPHA = 1;\nvar LINE_COLOR = COLOR_PRIMARY;\nvar LINE_THICKNESS = 1;\n\nvar SPEED = 8;\n\nvar renderer = Renderer(UNIT * 8 * 16, UNIT * 8 * 9);\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px solid #ccc\";\nrenderer.backgroundColor = COLOR_WHITE;\n\n// Add the canvas to the HTML document\ndocument.getElementById(\"pixi\").appendChild(renderer.view);\n\n// Create a container object called the 'stage'\nvar stage = new Container();\n\n// Set the initial game state\nvar state = play;\n\nvar message = void 0;\nvar rect1 = void 0,\n    rect2 = void 0;\n\nlinkFont(\"assets/Pixilator.ttf\");\n\n// Load resources (images and fonts) and then run the 'setup' function\nLoader.add([\"assets/Pixilator.ttf\"]).load(setup);\n\nfunction setup() {\n  rect1 = new Graphics();\n  rect1.beginFill(COLOR_PRIMARY);\n  rect1.lineStyle(LINE_THICKNESS * 2, LINE_COLOR, LINE_ALPHA);\n  rect1.endFill();\n  rect1.drawRect(0, 0, UNIT, UNIT);\n  // rect1.drawCircle(0, 0, UNIT)\n  rect1.position.set(0, 0);\n  rect1.vx = SPEED;\n  rect1.vy = SPEED;\n  stage.addChild(rect1);\n\n  rect2 = new Graphics();\n  rect2.beginFill(COLOR_PRIMARY);\n  rect2.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  rect2.endFill();\n  rect2.drawRect(0, 0, UNIT * 5 * 16, UNIT * 2.5 * 9);\n  rect2.x = (renderer.view.width - rect2.width) / 2;\n  rect2.y = (renderer.view.height - rect2.height) / 2;\n  rect2.vx = 0;\n  rect2.vy = SPEED / 2;\n  stage.addChild(rect2);\n  // rect2 = new Sprite(_rect2.generateTexture())\n  // // rect2.pivot.set(rect2.width / 2, rect2.height / 2)\n  // rect2.anchor.set(0.5, 0.5)\n  // rect2.x = renderer.view.width / 2\n  // rect2.y = renderer.view.height / 2\n  // rect2.rotation = 0\n  // stage.addChild(rect2)\n\n  // message = new Text(\"Hello Pixi!\", {\n  //   font: \"64px Pixilator\",\n  //   fill: COLOR\n  // })\n  // message.x = (renderer.view.width - message.width) / 2\n  // message.y = (renderer.view.height - message.height) / 2\n  // stage.addChild(message)\n\n  // Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop() {\n  // Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  // Run the current state\n  state();\n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n  // Any animation or game logic code goes here\n\n  rect1.x += rect1.vx;\n  rect1.y += rect1.vy;\n\n  // // check for a collision between the rect1 and the rect2\n  var collision1 = bump.rectangleCollision(rect1, rect2);\n  if (collision1) {\n    console.log(\"collision1\", typeof collision1 === \"undefined\" ? \"undefined\" : _typeof(collision1), collision1);\n    // state = stop\n    if (collision1 == \"left\" || collision1 == \"right\") {\n      rect1.vx = -rect1.vx;\n    }\n\n    if (collision1 == \"top\" || collision1 == \"bottom\") {\n      rect1.vy = -rect1.vy;\n    }\n  }\n\n  // Use the 'contain' function to keep the sprite inside the canvas\n  var collision2 = bump.contain(rect1, {\n    x: 0,\n    y: 0,\n    width: renderer.view.width,\n    height: renderer.view.height\n  });\n\n  // Check for a collision.\n  // If the value of 'collision' isn't 'undefined'\n  // then you know the sprite hit a boundary\n\n  if (collision2) {\n    // console.log(\"collision\", collision)\n    // Reverse the sprite's 'vx' value if it hits the left or right\n    if (collision2.has(\"left\") || collision2.has(\"right\")) {\n      rect1.vx = -rect1.vx;\n    }\n\n    // Reverse the sprite's 'vy' vlaue if it hits the top or bottom\n    if (collision2.has(\"top\") || collision2.has(\"bottom\")) {\n      rect1.vy = -rect1.vy;\n    }\n  }\n\n  rect2.x += rect2.vx;\n  rect2.y += rect2.vy;\n\n  var collision3 = bump.contain(rect2, {\n    x: 0,\n    y: rect1.height,\n    width: renderer.view.width,\n    height: renderer.view.height - rect1.height\n  });\n\n  if (collision3) {\n    if (collision3.has(\"left\") || collision3.has(\"right\")) {\n      rect2.vx = -rect2.vx;\n    }\n\n    if (collision3.has(\"top\") || collision3.has(\"bottom\")) {\n      rect2.vy = -rect2.vy;\n    }\n  }\n}\n\nfunction stop() {\n  console.log(\"stop\");\n}\n\nfunction linkFont(source) {\n  // console.log(\"linkFont\", source)\n  // Use the font's filename as the 'fontFamily' name.\n  // This code captures the font file's name without the extension or file path\n  var fontFamily = source.split(\"/\").pop().split(\".\")[0];\n\n  // Append an '@font-face' style rule to the head of the HTML document\n  var newStyle = document.createElement(\"style\");\n  var fontFace = \"@font-face {\\n    font-family: \\\"\" + fontFamily + \"\\\";\\n    src: url(\\\"\" + source + \"\\\");\\n  }\";\n  newStyle.appendChild(document.createTextNode(fontFace));\n  document.head.appendChild(newStyle);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ })

/******/ });