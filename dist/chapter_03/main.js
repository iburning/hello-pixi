/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ({

/***/ 2:
/***/ (function(module, exports) {

eval("/**\n * @fileoverview Shapes Text and Groups\n * @author burning <iburning@live.cn>\n * @version 2017.08.27\n */\n\n//Aliases\n// console.log('PIXI', PIXI)\nvar Container = PIXI.Container;\nvar Graphics = PIXI.Graphics;\nvar Loader = PIXI.loader;\nvar Rectangle = PIXI.Rectangle;\nvar Renderer = PIXI.autoDetectRenderer;\nvar Resources = PIXI.loader.resources;\nvar Sprite = PIXI.Sprite;\nvar TextureCache = PIXI.utils.TextureCache;\nvar Texture = PIXI.Texture;\n\nvar UNIT = 32;\nvar LINE_ALPHA = 1;\nvar LINE_COLOR = 0x333333;\nvar LINE_THICKNESS = 1;\nvar SHAPE_BACKGROUND_COLOR = 0xffffff;\n\nvar renderer = Renderer(UNIT * 2 * 16, UNIT * 2 * 9);\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px solid #ccc\";\nrenderer.backgroundColor = \"0xFFFFFF\";\n\n// Add the canvas to the HTML document\ndocument.getElementById(\"pixi\").appendChild(renderer.view);\n\n// Create a container object called the 'stage'\nvar stage = new Container();\n\n// Set the initial game state\nvar state = play;\n\nvar myLine = void 0;\n\n// Load resources (images and fonts) and then run the 'setup' function\n// Loader.add([\n//   // \"fonts/puzzler.ttf\"\n// ]).load(setup)\n\nsetup();\n\nfunction setup() {\n  // Create a Graphics object\n  // let shape = new Graphics()\n  var rectangle = new Graphics();\n\n  // Set the fill color\n  // shape.beginFill(hexColorCode)\n  rectangle.beginFill(0xFFFFFF);\n\n  // Set the line style\n  // shape.lineStyle(lineThickness, hexColorCode, alpha)\n  rectangle.lineStyle(1, 0x333333, 1);\n\n  // Draw the shape\n  // Use 'drawRect', 'drawCircle', 'drawEllipse',\n  // 'drawRoundedRect' or 'drawPolygon' to draw the shape\n  // rectangle.drawRect(x, y, width, height)\n  rectangle.drawRect(0, 0, UNIT * 5, UNIT * 5);\n\n  // End the color fill\n  // shape.endFill()\n  rectangle.endFill();\n\n  // Position the shape\n  // shape.position.set(x, y)\n  rectangle.position.set(UNIT, UNIT);\n\n  // Add the shape to the stage\n  // stage.addChild(shape)\n  stage.addChild(rectangle);\n\n  // let rectangle2 = new Graphics()\n  // rectangle2.beginFill(0xFFFFFF)\n  // rectangle2.lineStyle(10, 0x333333, 1)\n  // rectangle2.drawRect(0, 0, UNIT * 5, UNIT * 5)\n  // rectangle2.endFill()\n  // rectangle2.position.set(UNIT * 6, UNIT)\n  // stage.addChild(rectangle2)\n\n  var r = UNIT * 2.5;\n  var circle = new Graphics();\n  circle.beginFill(SHAPE_BACKGROUND_COLOR);\n  circle.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  circle.drawCircle(0, 0, r);\n  circle.endFill();\n  // circle.position.set(UNIT * 7 + r, UNIT + r)\n  // stage.addChild(circle)\n  var circleTexture = circle.generateTexture();\n  var circleSprite = new Sprite(circleTexture);\n  circleSprite.position.set(UNIT * 7, UNIT);\n  stage.addChild(circleSprite);\n\n  var rX = UNIT * 5;\n  var rY = UNIT * 2.5;\n  var ellipse = new Graphics();\n  ellipse.beginFill(SHAPE_BACKGROUND_COLOR);\n  ellipse.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  ellipse.drawEllipse(0, 0, rX, rY);\n  ellipse.endFill();\n  // ellipse.position.set(UNIT * 14.5 + r, UNIT + r)\n  // stage.addChild(ellipse)\n  var ellipseTexture = ellipse.generateTexture();\n  var ellipseSprite = new Sprite(ellipseTexture);\n  ellipseSprite.position.set(UNIT * 13, UNIT);\n  stage.addChild(ellipseSprite);\n\n  var line = new Graphics();\n  line.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  line.moveTo(0, 0);\n  line.lineTo(UNIT * 10, UNIT * 2.5);\n  // line.position.set(UNIT, UNIT * 7)\n  // stage.addChild(line)\n  var lineTexture = line.generateTexture();\n  var lineSprite = new Sprite(lineTexture);\n  lineSprite.position.set(UNIT, UNIT * 7);\n  stage.addChild(lineSprite);\n\n  // Create the line\n  myLine = new Graphics();\n  stage.addChild(myLine);\n\n  // Add 'angelA' and 'angelB' properties\n  myLine.angleA = 0;\n  myLine.angleB = 0;\n\n  // Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop() {\n  // Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  // Run the current state\n  state();\n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n  // Any animation or game logic code goes here\n\n  var r = (UNIT * 20 - UNIT * 10) / 4;\n  // Make the line's start point rotate clockwise\n  // around x/y point UNIT * 5, UNIT * 5\n  myLine.angleA += 0.02;\n  var rotatingA = rotateAroundPoint(UNIT * 10, UNIT * 10, r, r, myLine.angleA);\n\n  // Make the line's end point rotate counter-clockwise\n  // around x/y point UNIT * 10, UNIT * 10\n  myLine.angleB -= 0.02;\n  var rotatingB = rotateAroundPoint(UNIT * 20, UNIT * 10, r, r, myLine.angleB);\n\n  // Clear the line to reset it from the previous frame\n  myLine.clear();\n\n  //Draw the line using the rotating points as start and end points\n  myLine.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  // console.log('A', rotatingA.x, rotatingA.y)\n  // console.log('B', rotatingB.x, rotatingB.y)\n  myLine.moveTo(rotatingA.x, rotatingA.y);\n  myLine.lineTo(rotatingB.x, rotatingB.y);\n}\n\nfunction rotateAroundPoint(pointX, pointY, distanceX, distanceY, angle) {\n  var point = {};\n  point.x = pointX + Math.cos(angle) * distanceX;\n  point.y = pointY + Math.sin(angle) * distanceY;\n  return point;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ })

/******/ });