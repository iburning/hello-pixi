{"version":3,"sources":["webpack:///chapter_03/main.js","webpack:///webpack/bootstrap 32dd76c64819d070ad88","webpack:///./src/chapter_03/main.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","3","gameLoop","requestAnimationFrame","state","renderer","render","stage","play","r","UNIT","myLine","angleA","rotatingA","rotateAroundPoint","angleB","rotatingB","clear","lineStyle","LINE_THICKNESS","LINE_COLOR","LINE_ALPHA","moveTo","x","y","lineTo","pointX","pointY","distanceX","distanceY","angle","point","Math","cos","sin","Container","PIXI","Graphics","Renderer","loader","Rectangle","autoDetectRenderer","Sprite","resources","utils","TextureCache","Texture","SHAPE_BACKGROUND_COLOR","view","style","border","backgroundColor","document","getElementById","appendChild","rectangle","beginFill","drawRect","endFill","position","set","addChild","circle","drawCircle","circleTexture","generateTexture","circleSprite","rX","rY","ellipse","drawEllipse","ellipseTexture","ellipseSprite","line","lineTexture","lineSprite"],"mappings":"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","file":"chapter_03/main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 3:\n/***/ (function(module, exports) {\n\n/**\n * @fileoverview Shapes Text and Groups\n * @author burning <iburning@live.cn>\n * @version 2017.08.27\n */\n\n//Aliases\n// console.log('PIXI', PIXI)\nvar Container = PIXI.Container;\nvar Graphics = PIXI.Graphics;\nvar Loader = PIXI.loader;\nvar Rectangle = PIXI.Rectangle;\nvar Renderer = PIXI.autoDetectRenderer;\nvar Resources = PIXI.loader.resources;\nvar Sprite = PIXI.Sprite;\nvar TextureCache = PIXI.utils.TextureCache;\nvar Texture = PIXI.Texture;\n\nvar UNIT = 32;\nvar LINE_ALPHA = 1;\nvar LINE_COLOR = 0x333333;\nvar LINE_THICKNESS = 1;\nvar SHAPE_BACKGROUND_COLOR = 0xffffff;\n\nvar renderer = Renderer(UNIT * 2 * 16, UNIT * 2 * 9);\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px solid #ccc\";\nrenderer.backgroundColor = \"0xFFFFFF\";\n\n// Add the canvas to the HTML document\ndocument.getElementById(\"pixi\").appendChild(renderer.view);\n\n// Create a container object called the 'stage'\nvar stage = new Container();\n\n// Set the initial game state\nvar state = play;\n\nvar myLine = void 0;\n\n// Load resources (images and fonts) and then run the 'setup' function\n// Loader.add([\n//   // \"fonts/puzzler.ttf\"\n// ]).load(setup)\n\nsetup();\n\nfunction setup() {\n  // Create a Graphics object\n  // let shape = new Graphics()\n  var rectangle = new Graphics();\n\n  // Set the fill color\n  // shape.beginFill(hexColorCode)\n  rectangle.beginFill(0xFFFFFF);\n\n  // Set the line style\n  // shape.lineStyle(lineThickness, hexColorCode, alpha)\n  rectangle.lineStyle(1, 0x333333, 1);\n\n  // Draw the shape\n  // Use 'drawRect', 'drawCircle', 'drawEllipse',\n  // 'drawRoundedRect' or 'drawPolygon' to draw the shape\n  // rectangle.drawRect(x, y, width, height)\n  rectangle.drawRect(0, 0, UNIT * 5, UNIT * 5);\n\n  // End the color fill\n  // shape.endFill()\n  rectangle.endFill();\n\n  // Position the shape\n  // shape.position.set(x, y)\n  rectangle.position.set(UNIT, UNIT);\n\n  // Add the shape to the stage\n  // stage.addChild(shape)\n  stage.addChild(rectangle);\n\n  // let rectangle2 = new Graphics()\n  // rectangle2.beginFill(0xFFFFFF)\n  // rectangle2.lineStyle(10, 0x333333, 1)\n  // rectangle2.drawRect(0, 0, UNIT * 5, UNIT * 5)\n  // rectangle2.endFill()\n  // rectangle2.position.set(UNIT * 6, UNIT)\n  // stage.addChild(rectangle2)\n\n  var r = UNIT * 2.5;\n  var circle = new Graphics();\n  circle.beginFill(SHAPE_BACKGROUND_COLOR);\n  circle.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  circle.drawCircle(0, 0, r);\n  circle.endFill();\n  // circle.position.set(UNIT * 7 + r, UNIT + r)\n  // stage.addChild(circle)\n  var circleTexture = circle.generateTexture();\n  var circleSprite = new Sprite(circleTexture);\n  circleSprite.position.set(UNIT * 7, UNIT);\n  stage.addChild(circleSprite);\n\n  var rX = UNIT * 5;\n  var rY = UNIT * 2.5;\n  var ellipse = new Graphics();\n  ellipse.beginFill(SHAPE_BACKGROUND_COLOR);\n  ellipse.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  ellipse.drawEllipse(0, 0, rX, rY);\n  ellipse.endFill();\n  // ellipse.position.set(UNIT * 14.5 + r, UNIT + r)\n  // stage.addChild(ellipse)\n  var ellipseTexture = ellipse.generateTexture();\n  var ellipseSprite = new Sprite(ellipseTexture);\n  ellipseSprite.position.set(UNIT * 13, UNIT);\n  stage.addChild(ellipseSprite);\n\n  var line = new Graphics();\n  line.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  line.moveTo(0, 0);\n  line.lineTo(UNIT * 10, UNIT * 2.5);\n  // line.position.set(UNIT, UNIT * 7)\n  // stage.addChild(line)\n  var lineTexture = line.generateTexture();\n  var lineSprite = new Sprite(lineTexture);\n  lineSprite.position.set(UNIT, UNIT * 7);\n  stage.addChild(lineSprite);\n\n  // Create the line\n  myLine = new Graphics();\n  stage.addChild(myLine);\n\n  // Add 'angelA' and 'angelB' properties\n  myLine.angleA = 0;\n  myLine.angleB = 0;\n\n  // Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop() {\n  // Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  // Run the current state\n  state();\n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n  // Any animation or game logic code goes here\n\n  var r = (UNIT * 20 - UNIT * 10) / 4;\n  // Make the line's start point rotate clockwise\n  // around x/y point UNIT * 5, UNIT * 5\n  myLine.angleA += 0.02;\n  var rotatingA = rotateAroundPoint(UNIT * 10, UNIT * 10, r, r, myLine.angleA);\n\n  // Make the line's end point rotate counter-clockwise\n  // around x/y point UNIT * 10, UNIT * 10\n  myLine.angleB -= 0.02;\n  var rotatingB = rotateAroundPoint(UNIT * 20, UNIT * 10, r, r, myLine.angleB);\n\n  // Clear the line to reset it from the previous frame\n  myLine.clear();\n\n  //Draw the line using the rotating points as start and end points\n  myLine.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA);\n  // console.log('A', rotatingA.x, rotatingA.y)\n  // console.log('B', rotatingB.x, rotatingB.y)\n  myLine.moveTo(rotatingA.x, rotatingA.y);\n  myLine.lineTo(rotatingB.x, rotatingB.y);\n}\n\nfunction rotateAroundPoint(pointX, pointY, distanceX, distanceY, angle) {\n  var point = {};\n  point.x = pointX + Math.cos(angle) * distanceX;\n  point.y = pointY + Math.sin(angle) * distanceY;\n  return point;\n}\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// chapter_03/main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 32dd76c64819d070ad88","/**\n * @fileoverview Shapes Text and Groups\n * @author burning <iburning@live.cn>\n * @version 2017.08.27\n */\n\n//Aliases\n// console.log('PIXI', PIXI)\nconst Container = PIXI.Container\nconst Graphics = PIXI.Graphics\nconst Loader = PIXI.loader\nconst Rectangle = PIXI.Rectangle\nconst Renderer = PIXI.autoDetectRenderer\nconst Resources = PIXI.loader.resources\nconst Sprite = PIXI.Sprite\nconst TextureCache = PIXI.utils.TextureCache\nconst Texture = PIXI.Texture\n\nconst UNIT = 32\nconst LINE_ALPHA = 1\nconst LINE_COLOR = 0x333333\nconst LINE_THICKNESS = 1\nconst SHAPE_BACKGROUND_COLOR = 0xffffff\n\nconst renderer = Renderer(UNIT * 2 * 16, UNIT * 2 * 9)\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px solid #ccc\"\nrenderer.backgroundColor = \"0xFFFFFF\"\n\n// Add the canvas to the HTML document\ndocument.getElementById(\"pixi\").appendChild(renderer.view)\n\n// Create a container object called the 'stage'\nconst stage = new Container()\n\n// Set the initial game state\nlet state = play\n\nlet myLine\n\n// Load resources (images and fonts) and then run the 'setup' function\n// Loader.add([\n//   // \"fonts/puzzler.ttf\"\n// ]).load(setup)\n\nsetup()\n\nfunction setup() {\n  // Create a Graphics object\n  // let shape = new Graphics()\n  let rectangle = new Graphics()\n\n  // Set the fill color\n  // shape.beginFill(hexColorCode)\n  rectangle.beginFill(0xFFFFFF)\n\n  // Set the line style\n  // shape.lineStyle(lineThickness, hexColorCode, alpha)\n  rectangle.lineStyle(1, 0x333333, 1)\n\n  // Draw the shape\n  // Use 'drawRect', 'drawCircle', 'drawEllipse',\n  // 'drawRoundedRect' or 'drawPolygon' to draw the shape\n  // rectangle.drawRect(x, y, width, height)\n  rectangle.drawRect(0, 0, UNIT * 5, UNIT * 5)\n\n  // End the color fill\n  // shape.endFill()\n  rectangle.endFill()\n\n  // Position the shape\n  // shape.position.set(x, y)\n  rectangle.position.set(UNIT, UNIT)\n\n  // Add the shape to the stage\n  // stage.addChild(shape)\n  stage.addChild(rectangle)\n\n\n  // let rectangle2 = new Graphics()\n  // rectangle2.beginFill(0xFFFFFF)\n  // rectangle2.lineStyle(10, 0x333333, 1)\n  // rectangle2.drawRect(0, 0, UNIT * 5, UNIT * 5)\n  // rectangle2.endFill()\n  // rectangle2.position.set(UNIT * 6, UNIT)\n  // stage.addChild(rectangle2)\n\n  let r = UNIT * 2.5\n  let circle = new Graphics()\n  circle.beginFill(SHAPE_BACKGROUND_COLOR)\n  circle.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA)\n  circle.drawCircle(0, 0, r)\n  circle.endFill()\n  // circle.position.set(UNIT * 7 + r, UNIT + r)\n  // stage.addChild(circle)\n  let circleTexture = circle.generateTexture()\n  let circleSprite = new Sprite(circleTexture)\n  circleSprite.position.set(UNIT * 7, UNIT)\n  stage.addChild(circleSprite)\n\n\n  let rX = UNIT * 5\n  let rY = UNIT * 2.5\n  let ellipse = new Graphics()\n  ellipse.beginFill(SHAPE_BACKGROUND_COLOR)\n  ellipse.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA)\n  ellipse.drawEllipse(0, 0, rX, rY)\n  ellipse.endFill()\n  // ellipse.position.set(UNIT * 14.5 + r, UNIT + r)\n  // stage.addChild(ellipse)\n  let ellipseTexture = ellipse.generateTexture()\n  let ellipseSprite = new Sprite(ellipseTexture)\n  ellipseSprite.position.set(UNIT * 13, UNIT)\n  stage.addChild(ellipseSprite)\n\n\n  let line = new Graphics()\n  line.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA)\n  line.moveTo(0, 0)\n  line.lineTo(UNIT * 10, UNIT * 2.5)\n  // line.position.set(UNIT, UNIT * 7)\n  // stage.addChild(line)\n  let lineTexture = line.generateTexture()\n  let lineSprite = new Sprite(lineTexture)\n  lineSprite.position.set(UNIT, UNIT * 7)\n  stage.addChild(lineSprite)\n\n\n  // Create the line\n  myLine = new Graphics()\n  stage.addChild(myLine)\n\n  // Add 'angelA' and 'angelB' properties\n  myLine.angleA = 0\n  myLine.angleB = 0\n\n  // Start the game loop\n  gameLoop()\n}\n\n\nfunction gameLoop() {\n  // Loop this function 60 times per second\n  requestAnimationFrame(gameLoop)\n\n  // Run the current state\n  state()\n\n  //Render the stage\n  renderer.render(stage)\n}\n\n\nfunction play() {\n  // Any animation or game logic code goes here\n\n  let r = (UNIT * 20 - UNIT * 10) / 4\n  // Make the line's start point rotate clockwise\n  // around x/y point UNIT * 5, UNIT * 5\n  myLine.angleA += 0.02\n  let rotatingA = rotateAroundPoint(UNIT * 10, UNIT * 10, r, r, myLine.angleA)\n\n  // Make the line's end point rotate counter-clockwise\n  // around x/y point UNIT * 10, UNIT * 10\n  myLine.angleB -= 0.02\nlet rotatingB = rotateAroundPoint(UNIT * 20, UNIT * 10, r, r, myLine.angleB)\n\n  // Clear the line to reset it from the previous frame\n  myLine.clear()\n\n  //Draw the line using the rotating points as start and end points\n  myLine.lineStyle(LINE_THICKNESS, LINE_COLOR, LINE_ALPHA)\n  // console.log('A', rotatingA.x, rotatingA.y)\n  // console.log('B', rotatingB.x, rotatingB.y)\n  myLine.moveTo(rotatingA.x, rotatingA.y)\n  myLine.lineTo(rotatingB.x, rotatingB.y)\n}\n\n\nfunction rotateAroundPoint(pointX, pointY, distanceX, distanceY, angle) {\n  let point = {}\n  point.x = pointX + Math.cos(angle) * distanceX\n  point.y = pointY + Math.sin(angle) * distanceY\n  return point\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/chapter_03/main.js"],"sourceRoot":""}